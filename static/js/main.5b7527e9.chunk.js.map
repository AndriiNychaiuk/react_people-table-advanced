{"version":3,"sources":["components/HomePage/HomePage.tsx","components/Loader/Loader.tsx","components/PeoplePages/PersonLink/PersonLink.tsx","components/PeoplePages/PersonInfo/PersonInfo.tsx","components/PeoplePages/PersonRow/PersonRow.tsx","components/PeoplePages/NewPerson/NewPerson.tsx","components/PeoplePages/PeopleTable/PeopleTable.tsx","api/people.ts","components/PeoplePages/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","Loader","PersonLink","person","search","useLocation","to","pathname","slug","style","sex","color","linkColor","name","PersonInfo","born","died","mother","motherName","father","fatherName","PersonRow","useParams","classNames","NewPerson","people","onSetPeople","onFormVisible","useState","setName","setSex","setBorn","setDied","setFatherName","setMotherName","nameError","hasNameError","bornError","hasBornError","diedError","hasDiedError","ageError","hasAgeError","handleErrors","action","onSubmit","event","preventDefault","find","candidate","split","join","width","type","value","placeholder","onBlur","onChange","target","checked","filter","digit","includes","disabled","onClick","PeopleTable","setPeople","isSortedBy","setSortedBy","isSortReversed","reverseSort","useEffect","fetch","then","res","json","allPeople","preparedPeople","map","forEach","Object","assign","mom","dad","navigation","useNavigate","location","searchParams","URLSearchParams","appliedQuery","get","query","setQuery","applyQuery","useCallback","debounse","newQuery","set","delete","replace","isFormVisible","setFormVisibility","handleFormVisibility","handleSortByChange","handleReverseSort","setLowerStr","str","toLocaleLowerCase","lowerQuery","visiblePeople","sort","first","second","localeCompare","pickSortParam","setRadioHeadTitle","classnames","src","alt","length","columnHighlight","PeoplePage","NotFoundPage","App","path","element","index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5b7527e9.chunk.js","sourcesContent":["import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"has-text-centered is-uppercase is-size-2\">Home page</h1>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Person } from '../../../types/Person';\n\ninterface Props {\n  person: Person,\n}\n\nexport const PersonLink: FC<Props> = ({ person }) => {\n  const { search } = useLocation();\n  const linkColor = ({ sex }: Person) => {\n    switch (sex) {\n      case 'm':\n        return { color: 'rgb(0, 71, 171)' };\n\n      case 'f':\n        return { color: 'rgb(255, 0, 0)' };\n\n      default:\n        return { color: 'inherit' };\n    }\n  };\n\n  return (\n    <Link\n      to={{\n        pathname: `/people/${person.slug}`,\n        search: `${search}`,\n      }}\n      style={linkColor(person)}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport { Person } from '../../../types/Person';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ninterface Props {\n  person: Person,\n}\n\nexport const PersonInfo: React.FC<Props> = ({ person }) => {\n  return (\n    <>\n      <th>\n        <PersonLink person={person} />\n      </th>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <th>\n        {person.mother\n          ? (<PersonLink person={person.mother} />)\n          : (person.motherName)}\n      </th>\n      <th>\n        {person.father\n          ? (<PersonLink person={person.father} />)\n          : (person.fatherName)}\n      </th>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../../types/Person';\nimport { PersonInfo } from '../PersonInfo/PersonInfo';\n\ninterface Props {\n  person: Person,\n  columnHighlight: string,\n}\n\nexport const PersonRow: React.FC<Props> = ({ person }) => {\n  const { slug } = useParams();\n\n  return (\n    <tr className={classNames({\n      'has-background-primary': person.slug === slug,\n      'has-background-white': !slug,\n    })}\n    >\n      <PersonInfo\n        person={person}\n      />\n    </tr>\n  );\n};\n","import classNames from 'classnames';\nimport { FC, useState } from 'react';\nimport { Person } from '../../../types/Person';\n\ninterface Props {\n  people: Person[]\n  onSetPeople: React.Dispatch<React.SetStateAction<Person[]>>\n  onFormVisible: () => void;\n}\n\nexport const NewPerson: FC<Props> = ({\n  people,\n  onSetPeople,\n  onFormVisible,\n}) => {\n  const [name, setName] = useState('');\n  const [sex, setSex] = useState<'m' | 'f'>('m');\n  const [born, setBorn] = useState('');\n  const [died, setDied] = useState('');\n  const [fatherName, setFatherName] = useState('');\n  const [motherName, setMotherName] = useState('');\n\n  const [nameError, hasNameError] = useState(false);\n  const [bornError, hasBornError] = useState(false);\n  const [diedError, hasDiedError] = useState(false);\n  const [ageError, hasAgeError] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const mother = people\n      .find(candidate => candidate.name === motherName);\n\n    const father = people\n      .find(candidate => candidate.name === fatherName);\n\n    onSetPeople([...people, {\n      name,\n      sex,\n      born: +born,\n      died: +died,\n      fatherName,\n      motherName,\n      slug: `${name.split(' ').join('-')}-${born}`,\n      father: father || null,\n      mother: mother || null,\n    }]);\n\n    setName('');\n    setSex('m');\n    setBorn('');\n    setDied('');\n    setFatherName('');\n    setMotherName('');\n  };\n\n  const handleErrors = () => {\n    if (!name) {\n      hasNameError(true);\n    }\n\n    if (+born < 1400 || +born > 2022) {\n      hasBornError(true);\n    }\n\n    if (+died < 1400 || +died > 2022) {\n      hasDiedError(true);\n    }\n\n    if (+died - +born > 150 || died < born) {\n      hasAgeError(true);\n    }\n  };\n\n  return (\n    <form\n      action=\"GET\"\n      className=\"form is-flex is-justify-content-center\"\n      onSubmit={handleSubmit}\n    >\n      <nav\n        className=\"panel is-flex is-flex-direction-column\"\n        style={{ width: '700px' }}\n      >\n        <p className=\"panel-heading\">\n          New person data\n        </p>\n        <div\n          className=\"is-flex is-flex-direction-column\"\n          style={{ width: '600px' }}\n        >\n          <div className=\"panel-block is-flex is-justify-content-space-between\">\n            <div>\n              <span>\n                Name:\n                <input\n                  type=\"text\"\n                  value={name}\n                  className={classNames('input', {\n                    'is-danger': nameError,\n                  })}\n                  placeholder=\"name\"\n                  onBlur={handleErrors}\n                  onChange={({ target }) => {\n                    setName(target.value);\n                    hasNameError(false);\n                  }}\n                />\n              </span>\n              {nameError && (\n                <span>Enter the name</span>\n              )}\n            </div>\n\n            <div>\n              Sex:\n              <span className=\"panel-block\">\n                <label className=\"table__label is-capitalized\">\n                  <input\n                    type=\"radio\"\n                    name=\"sex\"\n                    className=\"radio\"\n                    value=\"f\"\n                    onChange={() => setSex('f')}\n                  />\n                  female\n                </label>\n\n                <label className=\"table__label is-capitalized\">\n                  <input\n                    type=\"radio\"\n                    name=\"sex\"\n                    className=\"radio\"\n                    value=\"m\"\n                    onChange={() => setSex('m')}\n                    checked={sex === 'm'}\n                  />\n                  male\n                </label>\n              </span>\n            </div>\n          </div>\n\n          <div className=\"is-flex is-justify-content-space-between\">\n            <div>\n              <p className=\"panel-block\">\n                <span>\n                  Born in:\n                  <input\n                    type=\"text\"\n                    className={classNames('input', {\n                      'is-danger': bornError || ageError,\n                    })}\n                    value={born}\n                    onBlur={handleErrors}\n                    onChange={({ target }) => {\n                      setBorn(target.value\n                        .split('')\n                        .filter(digit => '1234567890'.includes(digit))\n                        .join(''));\n                      hasBornError(false);\n                      hasAgeError(false);\n                    }}\n                  />\n                </span>\n              </p>\n              {bornError && (\n                <span>Enter birth year (between 1400 and 2022)</span>\n              )}\n            </div>\n\n            <div>\n              <p className=\"panel-block\">\n                <span>\n                  Died in:\n                  <input\n                    type=\"text\"\n                    className={classNames('input', {\n                      'is-danger': diedError || ageError,\n                    })}\n                    value={died}\n                    onBlur={handleErrors}\n                    onChange={({ target }) => {\n                      setDied(target.value\n                        .split('')\n                        .filter(digit => '1234567890'.includes(digit))\n                        .join(''));\n                      hasDiedError(false);\n                      hasAgeError(false);\n                    }}\n                    disabled={!born}\n                  />\n                </span>\n              </p>\n              {diedError && (\n                <span>Enter death year (between 1400 and 2022)</span>\n              )}\n            </div>\n          </div>\n          {ageError && (\n            <span>Years difference can not be more 150 or less 0</span>\n          )}\n\n          <div className=\"is-flex is-justify-content-space-between\">\n            <p className=\"panel-block\">\n              <span>\n                Father:\n                <input\n                  type=\"text\"\n                  className=\"input\"\n                  value={fatherName}\n                  onChange={({ target }) => setFatherName(target.value)}\n                />\n              </span>\n            </p>\n\n            <p className=\"panel-block\">\n              <span>\n                Mother:\n                <input\n                  type=\"text\"\n                  className=\"input\"\n                  value={motherName}\n                  onChange={({ target }) => setMotherName(target.value)}\n                />\n              </span>\n            </p>\n          </div>\n\n          <div className=\"panel-block\">\n            <button\n              type=\"submit\"\n              className=\"button is-link is-outlined is-fullwidth\"\n              disabled={!name || !born || !died || ageError}\n            >\n              Add new person\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={onFormVisible}\n            >\n              Close form\n            </button>\n          </div>\n        </div>\n      </nav>\n    </form>\n  );\n};\n","import { useCallback, useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport classnames from 'classnames';\nimport debounse from 'lodash/debounce';\nimport './PeopleTable.scss';\nimport { Person } from '../../../types/Person';\nimport { Loader } from '../../Loader';\nimport { getPeople } from '../../../api/people';\nimport { PersonRow } from '../PersonRow/PersonRow';\nimport { NewPerson } from '../NewPerson/NewPerson';\n\nexport const PeopleTable = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isSortedBy, setSortedBy] = useState('');\n  const [isSortReversed, reverseSort] = useState<'asc' | 'desc'>('desc');\n\n  useEffect(() => {\n    getPeople()\n      .then(allPeople => {\n        const preparedPeople = allPeople.map(person => ({ ...person }));\n\n        preparedPeople.forEach(person => {\n          Object.assign(person, {\n            mother: preparedPeople\n              .find(mom => mom.name === person.motherName) || null,\n            father: preparedPeople\n              .find(dad => dad.name === person.fatherName) || null,\n          });\n        });\n\n        setPeople(preparedPeople);\n      });\n  }, []);\n\n  const navigation = useNavigate();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n\n  const appliedQuery = searchParams.get('slug') || '';\n  const [query, setQuery] = useState(appliedQuery);\n\n  const applyQuery = useCallback(\n    debounse((newQuery: string) => {\n      if (newQuery) {\n        searchParams.set('slug', newQuery);\n      } else {\n        searchParams.delete('slug');\n      }\n\n      navigation(`?${searchParams}`, { replace: true });\n    }, 500),\n    [],\n  );\n\n  const [isFormVisible, setFormVisibility] = useState(true);\n\n  const handleFormVisibility = () => {\n    if (isFormVisible) {\n      searchParams.set('form', `${isFormVisible}`);\n    } else {\n      searchParams.delete('form');\n    }\n\n    setFormVisibility(!isFormVisible);\n\n    navigation(`?${searchParams}`, { replace: true });\n  };\n\n  const handleSlugChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    applyQuery(event.target.value);\n  };\n\n  const handleSortByChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    searchParams.set('sortBy', event.target.value);\n    navigation(`?${searchParams}`, { replace: true });\n    setSortedBy(event.target.value);\n  };\n\n  const handleReverseSort = () => {\n    searchParams.set('sortOrder', isSortReversed);\n    navigation(`?${searchParams}`, { replace: true });\n    if (isSortReversed === 'asc'\n    ) {\n      reverseSort('desc');\n    }\n\n    if (isSortReversed === 'desc') {\n      reverseSort('asc');\n    }\n  };\n\n  useEffect(() => {\n    reverseSort('asc');\n  }, [isSortedBy]);\n\n  // #region visiblePeope\n  const setLowerStr = (str: string) => {\n    return str ? str.toLocaleLowerCase() : '';\n  };\n\n  const lowerQuery = setLowerStr(appliedQuery);\n\n  const filterCallback = (person: Person) => (\n    setLowerStr(person.name).includes(lowerQuery)\n      || setLowerStr(person.motherName).includes(lowerQuery)\n      || setLowerStr(person.fatherName).includes(lowerQuery)\n  );\n\n  const sortCallback = (first: Person, second: Person) => {\n    const pickSortParam = (str: string) => {\n      switch (location.search.includes(str)) {\n        case str === 'name':\n          return isSortReversed === 'asc'\n            ? first.name.localeCompare(second.name)\n            : second.name.localeCompare(first.name);\n\n        case str === 'sex':\n          return isSortReversed === 'asc'\n            ? first.sex.localeCompare(second.sex)\n            : second.sex.localeCompare(first.sex);\n\n        case str === 'born':\n          return isSortReversed === 'asc'\n            ? first.born - second.born\n            : second.born - first.born;\n\n        case str === 'died':\n          return isSortReversed === 'asc'\n            ? first.died - second.died\n            : second.died - first.died;\n\n        default:\n          return 0;\n      }\n    };\n\n    return pickSortParam(isSortedBy);\n  };\n\n  const visiblePeople = people\n    .filter(filterCallback)\n    .sort(sortCallback);\n  // #endregion\n\n  const setRadioHeadTitle = (value: string) => (\n    <th className={classnames({\n      'has-background-primary-light': isSortedBy === value,\n    })}\n    >\n      <label className=\"table__label is-capitalized\">\n        <input\n          type=\"radio\"\n          name=\"head\"\n          className=\"table__radio\"\n          value={value}\n          onChange={handleSortByChange}\n          onClick={handleReverseSort}\n          checked={value === isSortedBy}\n        />\n        {value}\n        {isSortReversed === 'asc' && value === isSortedBy && (\n          <img src=\"images/sort_asc.png\" alt=\"sortAsc\" />\n        )}\n        {isSortReversed === 'desc' && value === isSortedBy && (\n          <img src=\"images/sort_desc.png\" alt=\"sortDesc\" />\n        )}\n        {value !== isSortedBy && (\n          <img src=\"images/sort_both.png\" alt=\"notSorted\" />\n        )}\n      </label>\n    </th>\n  );\n\n  useEffect(() => {\n    if (!location.search.includes(isSortedBy)) {\n      setSortedBy('');\n    }\n  }, [location.search]);\n\n  return (\n    people.length === 0\n      ? <Loader />\n      : (\n        <div className=\"is-flex is-flex-direction-column\">\n          {!location.search.includes('form') && (\n            <button\n              type=\"button\"\n              className=\"button is-info\"\n              onClick={handleFormVisibility}\n            >\n              New person form\n            </button>\n          )}\n          {location.search.includes('form') && (\n            <NewPerson\n              people={people}\n              onSetPeople={setPeople}\n              onFormVisible={handleFormVisibility}\n            />\n          )}\n          <div className=\"is-flex is-align-items-center\">\n            Filter:\n            <input\n              type=\"text\"\n              className=\"input is-rounded\"\n              placeholder=\"Search\"\n              value={query}\n              onChange={handleSlugChange}\n            />\n          </div>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                {setRadioHeadTitle('name')}\n                {setRadioHeadTitle('sex')}\n                {setRadioHeadTitle('born')}\n                {setRadioHeadTitle('died')}\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n            <tbody>\n              {visiblePeople.map(person => {\n                return (\n                  <PersonRow\n                    key={person.slug}\n                    person={person}\n                    columnHighlight={isSortedBy}\n                  />\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      )\n  );\n};\n","import { Person } from '../types/Person';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport function getPeople(): Promise<Person[]> {\n  return fetch(BASE_URL)\n    .then(res => res.json());\n}\n","import { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage: React.FC = () => (\n  <>\n    <h1 className=\"has-text-centered is-uppercase is-size-2\">People page</h1>\n    <PeopleTable />\n  </>\n);\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <div>\n    <h1 className=\"has-text-centered is-uppercase is-size-2\">Page not found</h1>\n  </div>\n);\n","import './App.scss';\nimport {\n  Route,\n  Routes,\n  NavLink,\n  Navigate,\n} from 'react-router-dom';\nimport 'bulma';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePages/PeoplePage/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\n\nconst App = () => (\n  <div className=\"App\">\n    <header className=\"is-flex is-justify-content-space-evenly\">\n      <NavLink\n        to=\"/\"\n        className=\"navbar-item is-tab\"\n      >\n        Home\n      </NavLink>\n      <NavLink\n        to=\"/people\"\n        className=\"navbar-item is-tab\"\n      >\n        People\n      </NavLink>\n    </header>\n    <main className=\"is-flex is-flex-direction-column is-align-items-center\">\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Routes>\n    </main>\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}