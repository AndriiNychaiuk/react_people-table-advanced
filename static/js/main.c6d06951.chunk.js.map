{"version":3,"sources":["components/HomePage/HomePage.tsx","components/Loader/Loader.tsx","components/PeoplePages/PersonLink/PersonLink.tsx","components/PeoplePages/PersonInfo/PersonInfo.tsx","components/PeoplePages/PersonRow/PersonRow.tsx","components/PeoplePages/PeopleTable/PeopleTable.tsx","api/people.ts","components/PeoplePages/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","Loader","PersonLink","person","search","useLocation","to","pathname","slug","style","sex","color","linkColor","name","PersonInfo","born","died","mother","motherName","father","PersonRow","useParams","classNames","PeopleTable","useState","people","setPeople","isSortedBy","setSortedBy","isSortReversed","reverseSort","useEffect","fetch","then","res","json","allPeople","preparedPeople","map","forEach","Object","assign","find","mom","dad","fatherName","navigation","useNavigate","location","searchParams","URLSearchParams","appliedQuery","get","query","setQuery","applyQuery","useCallback","debounse","newQuery","set","delete","replace","handleSortByChange","event","target","value","handleReverseSort","setLowerStr","str","toLocaleLowerCase","lowerQuery","visiblePeople","filter","includes","sort","first","second","localeCompare","pickSortParam","setRadioHeadTitle","classnames","type","onChange","onClick","checked","src","alt","length","width","placeholder","columnHighlight","PeoplePage","NotFoundPage","App","path","element","index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c6d06951.chunk.js","sourcesContent":["import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"has-text-centered is-uppercase is-size-2\">Home page</h1>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Person } from '../../../types/Person';\n\ninterface Props {\n  person: Person,\n}\n\nexport const PersonLink: FC<Props> = ({ person }) => {\n  const { search } = useLocation();\n  const linkColor = ({ sex }: Person) => {\n    switch (sex) {\n      case 'm':\n        return { color: 'rgb(0, 71, 171)' };\n\n      case 'f':\n        return { color: 'rgb(255, 0, 0)' };\n\n      default:\n        return { color: 'inherit' };\n    }\n  };\n\n  return (\n    <Link\n      to={{\n        pathname: `/people/${person.slug}`,\n        search: `${search}`,\n      }}\n      style={linkColor(person)}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport { Person } from '../../../types/Person';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ninterface Props {\n  person: Person,\n}\n\nexport const PersonInfo: React.FC<Props> = ({ person }) => {\n  return (\n    <>\n      <th>\n        <PersonLink person={person} />\n      </th>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <th>\n        {person.mother\n          ? (<PersonLink person={person.mother} />)\n          : (person.motherName)}\n      </th>\n      <th>\n        {person.father\n          ? (<PersonLink person={person.father} />)\n          : (person.motherName)}\n      </th>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../../types/Person';\nimport { PersonInfo } from '../PersonInfo/PersonInfo';\n\ninterface Props {\n  person: Person,\n  columnHighlight: string,\n}\n\nexport const PersonRow: React.FC<Props> = ({ person }) => {\n  const { slug } = useParams();\n\n  return (\n    <tr className={classNames({\n      'has-background-primary': person.slug === slug,\n      'has-background-white': !slug,\n    })}\n    >\n      <PersonInfo\n        person={person}\n      />\n    </tr>\n  );\n};\n","import { useCallback, useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport classnames from 'classnames';\nimport debounse from 'lodash/debounce';\nimport './PeopleTable.scss';\nimport { Person } from '../../../types/Person';\nimport { Loader } from '../../Loader';\nimport { getPeople } from '../../../api/people';\nimport { PersonRow } from '../PersonRow/PersonRow';\n\nexport const PeopleTable = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isSortedBy, setSortedBy] = useState('');\n  const [isSortReversed, reverseSort] = useState<'asc' | 'desc'>('desc');\n\n  useEffect(() => {\n    getPeople()\n      .then(allPeople => {\n        const preparedPeople = allPeople.map(person => ({ ...person }));\n\n        preparedPeople.forEach(person => {\n          Object.assign(person, {\n            mother: preparedPeople\n              .find(mom => mom.name === person.motherName) || null,\n            father: preparedPeople\n              .find(dad => dad.name === person.fatherName) || null,\n          });\n        });\n\n        setPeople(preparedPeople);\n      });\n  }, []);\n\n  const navigation = useNavigate();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n\n  const appliedQuery = searchParams.get('slug') || '';\n  const [query, setQuery] = useState(appliedQuery);\n\n  const applyQuery = useCallback(\n    debounse((newQuery: string) => {\n      if (newQuery) {\n        searchParams.set('slug', newQuery);\n      } else {\n        searchParams.delete('slug');\n      }\n\n      navigation(`?${searchParams}`, { replace: true });\n    }, 500),\n    [],\n  );\n\n  const handleSlugChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    applyQuery(event.target.value);\n  };\n\n  const handleSortByChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    searchParams.set('sortBy', event.target.value);\n    navigation(`?${searchParams}`, { replace: true });\n    setSortedBy(event.target.value);\n  };\n\n  const handleReverseSort = () => {\n    searchParams.set('sortOrder', isSortReversed);\n    navigation(`?${searchParams}`, { replace: true });\n    if (isSortReversed === 'asc'\n    ) {\n      reverseSort('desc');\n    }\n\n    if (isSortReversed === 'desc') {\n      reverseSort('asc');\n    }\n  };\n\n  useEffect(() => {\n    reverseSort('asc');\n  }, [isSortedBy]);\n\n  // #region visiblePeope\n  const setLowerStr = (str: string) => {\n    return str ? str.toLocaleLowerCase() : '';\n  };\n\n  const lowerQuery = setLowerStr(appliedQuery);\n\n  const filterCallback = (person: Person) => (\n    setLowerStr(person.name).includes(lowerQuery)\n      || setLowerStr(person.motherName).includes(lowerQuery)\n      || setLowerStr(person.fatherName).includes(lowerQuery)\n  );\n\n  const sortCallback = (first: Person, second: Person) => {\n    const pickSortParam = (str: string) => {\n      switch (location.search.includes(str)) {\n        case str === 'name':\n          return isSortReversed === 'asc'\n            ? first.name.localeCompare(second.name)\n            : second.name.localeCompare(first.name);\n\n        case str === 'sex':\n          return isSortReversed === 'asc'\n            ? first.sex.localeCompare(second.sex)\n            : second.sex.localeCompare(first.sex);\n\n        case str === 'born':\n          return isSortReversed === 'asc'\n            ? first.born - second.born\n            : second.born - first.born;\n\n        case str === 'died':\n          return isSortReversed === 'asc'\n            ? first.died - second.died\n            : second.died - first.died;\n\n        default:\n          return 0;\n      }\n    };\n\n    return pickSortParam(isSortedBy);\n  };\n\n  const visiblePeople = people\n    .filter(filterCallback)\n    .sort(sortCallback);\n  // #endregion\n\n  const setRadioHeadTitle = (value: string) => (\n    <th className={classnames({\n      'has-background-primary-light': isSortedBy === value,\n    })}\n    >\n      <label className=\"table__label is-capitalized\">\n        <input\n          type=\"radio\"\n          name=\"head\"\n          className=\"table__radio\"\n          value={value}\n          onChange={handleSortByChange}\n          onClick={handleReverseSort}\n          checked={value === isSortedBy}\n        />\n        {value}\n        {isSortReversed === 'asc' && value === isSortedBy && (\n          <img src=\"../../../../images/sort_asc.png\" alt=\"sortAsc\" />\n        )}\n        {isSortReversed === 'desc' && value === isSortedBy && (\n          <img src=\"../../../../images/sort_desc.png\" alt=\"sortDesc\" />\n        )}\n        {value !== isSortedBy && (\n          <img src=\"../../../../images/sort_both.png\" alt=\"notSorted\" />\n        )}\n      </label>\n    </th>\n  );\n\n  useEffect(() => {\n    if (!location.search.includes(isSortedBy)) {\n      setSortedBy('');\n    }\n  }, [location.search]);\n\n  return (\n    people.length === 0\n      ? <Loader />\n      : (\n        <>\n          <div style={{ width: '600px' }}>\n            <input\n              type=\"text\"\n              className=\"input is-rounded\"\n              placeholder=\"Search\"\n              value={query}\n              onChange={handleSlugChange}\n            />\n          </div>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                {setRadioHeadTitle('name')}\n                {setRadioHeadTitle('sex')}\n                {setRadioHeadTitle('born')}\n                {setRadioHeadTitle('died')}\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n            <tbody>\n              {visiblePeople.map(person => {\n                return (\n                  <PersonRow\n                    key={person.slug}\n                    person={person}\n                    columnHighlight={isSortedBy}\n                  />\n                );\n              })}\n            </tbody>\n          </table>\n        </>\n      )\n  );\n};\n","import { Person } from '../types/Person';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport function getPeople(): Promise<Person[]> {\n  return fetch(BASE_URL)\n    .then(res => res.json());\n}\n","import { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage: React.FC = () => (\n  <>\n    <h1 className=\"has-text-centered is-uppercase is-size-2\">People page</h1>\n    <PeopleTable />\n  </>\n);\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <div>\n    <h1 className=\"has-text-centered is-uppercase is-size-2\">Page not found</h1>\n  </div>\n);\n","import './App.scss';\nimport {\n  Route,\n  Routes,\n  NavLink,\n  Navigate,\n} from 'react-router-dom';\nimport 'bulma';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePages/PeoplePage/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\n\nconst App = () => (\n  <div className=\"App\">\n    <header className=\"is-flex is-justify-content-space-evenly\">\n      <NavLink\n        to=\"/\"\n        className=\"navbar-item is-tab\"\n      >\n        Home\n      </NavLink>\n      <NavLink\n        to=\"/people\"\n        className=\"navbar-item is-tab\"\n      >\n        People\n      </NavLink>\n    </header>\n    <main className=\"is-flex is-flex-direction-column is-align-items-center\">\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Routes>\n    </main>\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}